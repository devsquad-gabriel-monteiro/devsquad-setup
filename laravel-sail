#!/bin/sh

# Colors
NC='\033[0m'
BBlue='\033[1;34m'
BRed='\033[1;33m'

phpVersions=$(grep -o '"php": "[^"]*' composer.json | grep -o '[^"]*$' | sed 's/\^*\.*//g')
IFS='|' read -ra PHPVERSION <<<"$phpVersions"
max=${PHPVERSION[0]}
for i in "${PHPVERSION[@]}"; do
    if [ "$((i > max))" -ne 0 ]; then
        max=$i
    fi
done
phpVersion=$(echo $max | cut -c 1-2)

docker info > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "${BRed}Docker is not running.${NC}"
    exit 1
fi

echo "\n${BBlue}Installing Laravel Sail${NC}\n"
docker run --rm \
    -u "$(id -u):$(id -g)" \
    -v $(pwd):/var/www/html \
    -w /var/www/html \
    "laravelsail/php$phpVersion-composer:latest" \
    bash -c "composer require laravel/sail --dev --no-cache" \
    composer install --ignore-platform-reqs

echo "\n${BBlue}Installing PHP Packages${NC}\n"
docker run --rm \
    -u "$(id -u):$(id -g)" \
    -v $(pwd):/var/www/html \
    -w /var/www/html \
    "laravelsail/php$phpVersion-composer:latest" \
    composer install --ignore-platform-reqs --no-cache

echo "\n${BRed}Which database would you like to use? [mysql]\n${NC}"
echo " [0] mysql\n [1] pgsql\n [2] mariadb\n"
read DATABASE

databases=(mysql pgsql mariadb)

echo "\n${BBlue}Creating the docker-composer.yml file (with ${databases[DATABASE]}, redis, and mailhog)\n${NC}"
docker run --rm \
    -u "$(id -u):$(id -g)" \
    -v $(pwd):/var/www/html \
    -w /var/www/html \
    "laravelsail/php$phpVersion-composer:latest" \
    bash -c "php artisan sail:install --with=${databases[DATABASE]},redis,mailhog"
